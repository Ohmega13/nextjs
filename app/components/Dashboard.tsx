// app/components/Dashboard.tsx
'use client';

import Link from 'next/link';
import { useEffect, useState } from 'react';
import { supabase } from '@/lib/supabaseClient';

type ProfileRow = {
  user_id: string;
  role: 'admin' | 'member' | null;
  display_name: string | null;
  permissions?: Record<string, boolean> | null;
};

export default function Dashboard() {
  const [loading, setLoading] = useState(true);
  const [displayName, setDisplayName] = useState<string | null>(null);
  const [role, setRole] = useState<ProfileRow['role']>(null);
  const [perms, setPerms] = useState<Record<string, boolean>>({});

  useEffect(() => {
    let ignore = false;

    const seed = async () => {
      const { data: { user } } = await supabase.auth.getUser();
      if (!user) return;

      const meta: any = user.user_metadata || {};
      if (!ignore) {
        setDisplayName(meta.full_name || meta.name || user.email || null);
      }

      const { data: prof } = await supabase
        .from('profiles')
        .select('user_id, role, display_name, permissions')
        .eq('user_id', user.id)
        .maybeSingle();

      if (!ignore) {
        const p = (prof as ProfileRow | null) || null;
        setRole((p?.role as any) ?? null);
        setPerms((p?.permissions as any) ?? {});
        setLoading(false);
      }
    };

    seed();

    return () => { ignore = true; };
  }, []);

  if (loading) {
    return <div className="p-6 text-slate-500">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏î‡∏ä‡∏ö‡∏≠‡∏£‡πå‡∏î‚Ä¶</div>;
  }

  // ‡πÄ‡∏°‡∏ô‡∏π‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡πÄ‡∏´‡πá‡∏ô
  const commonCards = [
    // ‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏°‡∏ô‡∏π ‚Äú‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏î‡∏π‡∏î‡∏ß‡∏á‚Äù ‡∏ï‡πà‡∏≠‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå tarot
    ...(perms?.tarot ? [{
      href: '/reading',
      title: '‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏î‡∏π‡∏î‡∏ß‡∏á',
      desc: '‡∏™‡∏∏‡πà‡∏°‡πÑ‡∏û‡πà/‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ú‡∏•',
      emoji: 'üîÆ',
    }] : []),
    {
      href: '/history',
      title: '‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏î‡∏π‡∏î‡∏ß‡∏á‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô',
      desc: '‡∏î‡∏π‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô)',
      emoji: 'üìú',
    },
    {
      href: '/clients-manage',
      title: '‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏•‡∏π‡∏Å‡∏î‡∏ß‡∏á (‡∏™‡πà‡∏ß‡∏ô‡∏â‡∏±‡∏ô)',
      desc: '‡∏ñ‡πâ‡∏≤‡∏à‡∏±‡∏î‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ß‡πâ‡πÉ‡∏ô‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á',
      emoji: 'üë§',
    },
  ];

  // ‡πÄ‡∏°‡∏ô‡∏π‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°
  const adminCards = role === 'admin'
    ? [
        {
          href: '/clients',
          title: '‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏•‡∏π‡∏Å‡∏î‡∏ß‡∏á',
          desc: '‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏î‡∏ß‡∏á‡πÉ‡∏´‡∏°‡πà',
          emoji: 'üìù',
        },
        {
          href: '/members',
          title: '‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å',
          desc: '‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå/‡πÅ‡∏û‡πá‡∏Å‡πÄ‡∏Å‡∏à',
          emoji: 'üë•',
        },
        {
          href: '/backup',
          title: '‡∏™‡∏≥‡∏£‡∏≠‡∏á/‡∏Å‡∏π‡πâ‡∏Ñ‡∏∑‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•',
          desc: '‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å/‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤',
          emoji: 'üíæ',
        },
        {
          href: '/admin/prompts',
          title: '‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏û‡∏£‡∏≠‡∏°‡∏õ‡πå',
          desc: '‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç/‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏£‡∏≠‡∏°‡∏õ‡πå‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå',
          emoji: '‚öôÔ∏è',
        },
      ]
    : [];

  const cards = [...commonCards, ...adminCards];

  return (
    <div className="min-h-[60vh] bg-gradient-to-b from-slate-50 to-white text-slate-900 rounded-2xl">
      {/* Hero */}
      <section className="px-4 pt-8">
        <div className="rounded-2xl border border-slate-200 bg-white p-6 md:p-10 shadow-sm">
          <h1 className="text-2xl md:text-3xl font-bold tracking-tight">
            ‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ {displayName ?? ''} üëã
          </h1>
          <p className="mt-2 text-slate-600">
            {role === 'admin'
              ? '‡πÅ‡∏î‡∏ä‡∏ö‡∏≠‡∏£‡πå‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö ‚Äî ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å ‡∏•‡∏π‡∏Å‡∏î‡∏ß‡∏á ‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•'
              : '‡πÅ‡∏î‡∏ä‡∏ö‡∏≠‡∏£‡πå‡∏î‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì ‚Äî ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏î‡∏π‡∏î‡∏ß‡∏á‡πÅ‡∏•‡∏∞‡∏î‡∏π‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì'}
          </p>
        </div>
      </section>

      {/* Cards */}
      <section className="px-4 py-8 grid gap-6 sm:grid-cols-2 lg:grid-cols-3">
        {cards.map((m) => (
          <Link
            key={m.href}
            href={m.href}
            className="group rounded-xl border border-slate-200 bg-white p-5 shadow-sm hover:shadow-md transition-shadow"
          >
            <div className="text-3xl">{m.emoji}</div>
            <h3 className="mt-3 font-semibold text-slate-900 group-hover:text-indigo-600">
              {m.title}
            </h3>
            <p className="mt-1 text-sm text-slate-600">{m.desc}</p>
            <div className="mt-4 text-sm font-medium text-indigo-600">
              ‡πÑ‡∏õ‡∏ó‡∏µ‡πà {m.title} ‚Üí
            </div>
          </Link>
        ))}
        {cards.length === 0 && (
          <div className="col-span-full text-sm text-slate-500">
            ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÄ‡∏°‡∏ô‡∏π‡πÉ‡∏î ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
          </div>
        )}
      </section>
    </div>
  );
}